{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","components/App.js","index.js"],"names":["INITIAL_STATE","name","phone","ContactForm","state","handleChangeForm","target","value","setState","handleFormSubmit","e","preventDefault","onAdd","props","validateForm","id","uuid","resetForm","onCheckUnique","alert","this","onSubmit","type","placeholder","onChange","Component","ContactListItem","onRemove","onClick","ContactsList","contacts","length","map","contact","Filter","filter","App","number","handleAddContact","newContact","handleCheckUnique","isExistContact","find","handleRemoveContact","handleFilterChange","getVisibleContacts","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9908aba4.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport {v4 as uuid } from 'uuid'\n\nconst INITIAL_STATE = {\n    name: '',\n    phone: '',\n}\n\nclass ContactForm extends Component {\n    state = INITIAL_STATE\n    \n    handleChangeForm = ({ target }) => {\n        const { name, value } = target\n        this.setState({ [name]: value })\n    }\n\n    handleFormSubmit = (e) => {\n        e.preventDefault()\n\n        const { name, phone } = this.state\n        const { onAdd } = this.props\n\n        const isValidatedForm = this.validateForm()\n \n        if(!isValidatedForm) return\n\n        onAdd({id: uuid(), name, phone})\n        this.resetForm()\n    }\n\n   validateForm = () => {\n       const { name, phone } = this.state\n       const { onCheckUnique } = this.props\n       if (!name || !phone) {\n           alert('Some field is empty')\n           return false\n       }\n\n       return onCheckUnique(name)\n   }\n\n   resetForm = () => this.setState(INITIAL_STATE)\n\n    render() {\n        const { name, phone } = this.state\n        return (\n        <form onSubmit={this.handleFormSubmit}>\n        <input type='text' name='name' placeholder='Enter name' value={name} onChange={this.handleChangeForm}/>\n        <input type='tel' \n               name='phone' \n               placeholder='Enter phone number' \n               value={phone}\n               onChange={this.handleChangeForm}    \n               />\n        <button type='submit'>Add Contact</button>\n        </form>\n        )\n    }\n}\n\nexport default ContactForm","//import ContactForm from \"../ContactForm\"\n\nconst ContactListItem = ({ id, name, phone, onRemove }) => {\n    return (\n        <li>\n            {name}: {phone} <button onClick={() => onRemove(id)}>delete</button>\n        </li>\n    )\n}\n\nconst ContactsList = ({ contacts, onRemove }) => {\n    if(contacts.length === 0) return null\n    return (\n        <ul>\n            {contacts.map((contact) => (\n                <ContactListItem {...contact} onRemove={onRemove}/>\n            ))}\n        </ul>\n    )\n}\n\nexport default ContactsList","const Filter = ({ filter, onChange }) => {\n    return (\n        <input\n            type='text'\n            name='filter'\n            value={filter}\n            onChange={({ target }) => onChange(target.value)}\n            placeholder='Enter name for Search'\n        />\n    )\n}\n\nexport default Filter","import { Component } from \"react\";\n\nimport ContactForm from './ContactForm';\nimport ContactsList from './ContactsList';\nimport Filter from \"./Filter\";\n\nexport default class App extends Component {\n   state = {\n     contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n     ],\n     filter: '',\n   }\n\n   handleAddContact = (newContact) => \n      this.setState(({ contacts }) => ({\n        contacts: [...contacts, newContact],\n      }))\n\n   handleCheckUnique = (name) => {\n       const { contacts } = this.state\n\n       const isExistContact = !!contacts.find((contact) => contact.name === name)\n\n       isExistContact && alert('Contact is already exist')\n       \n       return !isExistContact\n  }\n\n  handleRemoveContact = (id) => \n  this.setState(({contacts}) => ({contacts: contacts.filter((contact)=>contact.id !== id) }))\n\n  handleFilterChange = (filter) => this.setState({ filter })\n\n  getVisibleContacts = () => {\n     const { contacts, filter } = this.state;\n     return contacts.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()))\n  }\n\n  render() {\n    const { filter } = this.state\n    const visibleContacts = this.getVisibleContacts()\n    return (\n    <>\n      <h2>Form Contact</h2>\n      <ContactForm onAdd={this.handleAddContact} onCheckUnique={this.handleCheckUnique}/>\n      <h2>Contacts List</h2>\n      <Filter filter={filter} onChange={this.handleFilterChange} />\n      <ContactsList contacts={visibleContacts} onRemove={this.handleRemoveContact}/>\n    </>\n    )\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}